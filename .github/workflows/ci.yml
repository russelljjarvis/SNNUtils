name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: .

      # Step 2: Set up Julia
      - name: Set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: '1' # Specify the Julia version you need

      # Step 3: Set up cache for dependencies
      - name: Setup cache
        uses: julia-actions/cache@v2
      - name: Install unregistered package
        run: julia -e 'using Pkg; Pkg.add(url="https://github.com/JuliaSNN/SpikingNeuralNetworks.jl.git")'
      - name: Install Dependencies
        uses: julia-actions/julia-buildpkg@v1

      - name: Run tests
        uses: julia-actions/julia-runtest@v1
        
      # Step 4: Install dependencies (registered and unregistered)
      - name: Dont Install Dependencies
        run: |
          cd ${{ github.workspace }} && julia -e '
            import Pkg;
            # Add unregistered dependency from GitHub
            Pkg.develop(Pkg.add(url="https://github.com/JuliaSNN/SpikingNeuralNetworks.jl.git"));
            # Install all dependencies listed in Project.toml
            Pkg.update();
            Pkg.resolve();
            Pkg.instantiate();  
            Pkg.precompile()
          '

      # Step 5: Run tests
      # Step 5: Run tests with force_latest_compatible_version=true
      - name: Dont Run tests
        run: |
          cd ${{ github.workspace }} && julia -e '
            import Pkg;
            # Add unregistered dependency from GitHub
            Pkg.develop(Pkg.PackageSpec(url="https://github.com/JuliaSNN/SpikingNeuralNetworks.jl"));
            # Install all dependencies listed in Project.toml
            Pkg.update();
            Pkg.resolve();
            Pkg.instantiate();
            Pkg.activate(".");
            Pkg.precompile();
            Pkg.test()
          '
      # Step 6: Upload test results on failure
      - name: Dont Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test/
